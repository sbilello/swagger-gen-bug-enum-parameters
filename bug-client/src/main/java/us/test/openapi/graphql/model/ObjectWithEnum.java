/*
 * Nested Object
 * Nested Objct Sample.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package us.test.openapi.graphql.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The base meeting object.
 */
@Schema(description = "The base meeting object.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-09-22T11:36:00.722-07:00[America/Los_Angeles]")
public class ObjectWithEnum {
  @JsonProperty("topic")
  private String topic = null;

  /**
   * The type of meeting: * &#x60;1&#x60; — An instant meeting. * &#x60;2&#x60; — A scheduled meeting. * &#x60;3&#x60; — A recurring meeting with no fixed time. * &#x60;8&#x60; — A recurring meeting with fixed time.
   */
  public enum TypeEnum {
    NUMBER_1(1),
    NUMBER_2(2),
    NUMBER_3(3),
    NUMBER_8(8);

    private Integer value;

    TypeEnum(Integer value) {
      this.value = value;
    }
    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(Integer input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = TypeEnum.NUMBER_2;

  public ObjectWithEnum topic(String topic) {
    this.topic = topic;
    return this;
  }

   /**
   * The meeting&#x27;s topic.
   * @return topic
  **/
  @Schema(description = "The meeting's topic.")
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }

  public ObjectWithEnum type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of meeting: * &#x60;1&#x60; — An instant meeting. * &#x60;2&#x60; — A scheduled meeting. * &#x60;3&#x60; — A recurring meeting with no fixed time. * &#x60;8&#x60; — A recurring meeting with fixed time.
   * @return type
  **/
  @Schema(description = "The type of meeting: * `1` — An instant meeting. * `2` — A scheduled meeting. * `3` — A recurring meeting with no fixed time. * `8` — A recurring meeting with fixed time.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectWithEnum objectWithEnum = (ObjectWithEnum) o;
    return Objects.equals(this.topic, objectWithEnum.topic) &&
        Objects.equals(this.type, objectWithEnum.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(topic, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectWithEnum {\n");
    
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
